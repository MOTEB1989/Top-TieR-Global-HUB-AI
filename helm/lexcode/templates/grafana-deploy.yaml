{{- if and .Values.monitoring.enabled .Values.monitoring.grafana }}
{{- $dashboards := .Values.monitoring.grafana.dashboards | default (list) }}
{{- if gt (len $dashboards) 0 }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: lexcode-grafana-dashboards
  labels:
    grafana_dashboard: "1"
data:
{{- range $dashboard := $dashboards }}
  {{ printf "%s.json" (replace (lower $dashboard.name) " " "-") }}: |
{{ $.Files.Get $dashboard.file | indent 4 }}
{{- end }}
---
{{- end }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: lexcode-grafana-dashboard-providers
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: default
        orgId: 1
        folder: ""
        type: file
        disableDeletion: false
        updateIntervalSeconds: 30
        options:
          path: /var/lib/grafana/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: lexcode-grafana-datasources
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://lexcode-prometheus:9090
        isDefault: true
        jsonData:
          timeInterval: 15s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lexcode-grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lexcode-grafana
  template:
    metadata:
      labels:
        app: lexcode-grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: {{ .Values.monitoring.grafana.adminUser | quote }}
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: {{ .Values.monitoring.grafana.adminPassword | quote }}
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: grafana-dashboards
              mountPath: /var/lib/grafana/dashboards
            - name: grafana-dashboard-providers
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
      volumes:
        - name: grafana-dashboards
          configMap:
            name: lexcode-grafana-dashboards
            optional: true
        - name: grafana-dashboard-providers
          configMap:
            name: lexcode-grafana-dashboard-providers
        - name: grafana-datasources
          configMap:
            name: lexcode-grafana-datasources
---
apiVersion: v1
kind: Service
metadata:
  name: lexcode-grafana
spec:
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: lexcode-grafana
{{- end }}
