---
name: Veritas Health Check

'on':
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:

jobs:
  health:
    runs-on: ubuntu-latest
    env:
      VERITAS_CORE_HEALTH_URL: ${{ vars.VERITAS_CORE_HEALTH_URL }}
      VERITAS_WEB_HEALTH_URL: ${{ vars.VERITAS_WEB_HEALTH_URL }}
      VERITAS_HEALTH_STRICT: ${{ vars.VERITAS_HEALTH_STRICT }}
    steps:
      - uses: actions/checkout@v4
      - name: Resolve health targets
        id: resolve
        run: |
          set -euo pipefail

          is_local_url() {
            case "$1" in
              http://localhost*|https://localhost*|http://127.*|https://127.*) return 0 ;;
              *) return 1 ;;
            esac
          }

          core_input="${VERITAS_CORE_HEALTH_URL:-}"
          web_input="${VERITAS_WEB_HEALTH_URL:-}"

          any_remote="false"
          any_local="false"
          any_target="false"

          for candidate in "$core_input" "$web_input"; do
            if [[ -z "$candidate" || "$candidate" == "skip" ]]; then
              continue
            fi

            any_target="true"

            if is_local_url "$candidate"; then
              any_local="true"
            else
              any_remote="true"
            fi
          done

          use_local="false"
          if [[ "$any_remote" == "true" ]]; then
            use_local="false"
          elif [[ "$any_local" == "true" ]]; then
            use_local="true"
          elif [[ "$any_target" == "false" ]]; then
            use_local="true"
          fi

          if [[ "$use_local" == "true" ]]; then
            core="${core_input:-http://localhost:8000/health}"
            web="${web_input:-http://localhost:3000/health}"
          else
            core="${core_input:-skip}"
            web="${web_input:-skip}"
          fi

          if [[ "$core" == "skip" && "$web" == "skip" ]]; then
            use_local="false"
          fi

          echo "Resolved core target: $core"
          echo "Resolved web target: $web"
          echo "needs_local=$use_local"

          echo "VERITAS_CORE_HEALTH_URL=$core" >>"$GITHUB_ENV"
          echo "VERITAS_WEB_HEALTH_URL=$web" >>"$GITHUB_ENV"
          echo "needs_local=$use_local" >>"$GITHUB_OUTPUT"

          if [[ -n ${GITHUB_STEP_SUMMARY:-} && "$core" == "skip" && "$web" == "skip" ]]; then
            {
              echo '## Veritas health configuration'
              echo
              echo 'All health targets are set to `skip`; the workflow will exit successfully.'
            } >>"$GITHUB_STEP_SUMMARY"
          fi

      - name: Boot local Veritas stack
        if: ${{ steps.resolve.outputs.needs_local == 'true' }}
        run: |
          docker compose up -d

      - name: Wait for local services to become healthy
        if: ${{ steps.resolve.outputs.needs_local == 'true' }}
        run: |
          set +e
          success=0
          for attempt in {1..12}; do
            echo "⏳ Veritas health probe attempt ${attempt}/12"
            if GITHUB_STEP_SUMMARY= GITHUB_ACTIONS=local VERITAS_HEALTH_STRICT=true \
              bash scripts/veritas_health_check.sh; then
              success=1
              break
            fi
            sleep 10
          done

          if [[ $success -ne 1 ]]; then
            echo "❌ Veritas services did not become healthy in time" >&2
            docker compose ps
            docker compose logs
            exit 1
          fi

      - name: Run health check (local stack)
        if: ${{ steps.resolve.outputs.needs_local == 'true' }}
        run: GITHUB_ACTIONS=local VERITAS_HEALTH_STRICT=true bash scripts/veritas_health_check.sh

      - name: Run health check (remote targets)
        if: ${{ steps.resolve.outputs.needs_local != 'true' }}
        run: bash scripts/veritas_health_check.sh

      - name: Tear down local stack
        if: ${{ always() && steps.resolve.outputs.needs_local == 'true' }}
        run: docker compose down -v
