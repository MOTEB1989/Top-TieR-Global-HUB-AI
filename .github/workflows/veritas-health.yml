name: Veritas Health Check

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  DB_URL: ${{ secrets.DB_URL }}
  OPENSEARCH_URL: ${{ secrets.OPENSEARCH_URL }}
  MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
  MINIO_ROOT_USER: ${{ secrets.MINIO_ROOT_USER }}
  MINIO_ROOT_PASSWORD: ${{ secrets.MINIO_ROOT_PASSWORD }}
  REDIS_URL: ${{ secrets.REDIS_URL }}
  NEO4J_URI: ${{ secrets.NEO4J_URI }}
  NEO4J_AUTH: ${{ secrets.NEO4J_AUTH }}
  CLICKHOUSE_URL: ${{ secrets.CLICKHOUSE_URL }}

on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * *" # تشغيل يومي الساعة 3 صباحاً UTC

jobs:
  health-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Start services
        run: docker compose up -d

      - name: Wait for services to be healthy
        run: |
          echo "⏳ Waiting for CORE_API (8000) and VERITAS_WEB (8080)..."
          for i in {1..60}; do
            core=$(curl -sf http://localhost:8000/health || echo "fail")
            web=$(curl -sf http://localhost:8080/health || echo "fail")

            if [[ "$core" != "fail" && "$web" != "fail" ]]; then
              echo "✅ Both services are healthy!"
              exit 0
            fi

            echo "Retry $i/60: services not ready yet..."
            sleep 5
          done

          echo "❌ ERROR: Services did not become healthy in time."
          docker compose logs
          exit 1

      - name: Run Veritas health check script
        run: |
          set -o pipefail
          bash scripts/veritas_health_check.sh 2>&1 | tee health.log

      - name: Upload health log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: veritas-health-log
          path: health.log

      - name: Stop services
        if: always()
        run: docker compose down
