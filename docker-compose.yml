---
services:
  # Main API service (motebai-api)
  motebai-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - ENVIRONMENT=development
    depends_on:
      - redis
      - postgres
      - neo4j
    volumes:
      - .:/app

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  # PostgreSQL for data storage
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=app_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Neo4j graph database for OSINT data
  neo4j:
    image: neo4j:5
    ports:
      - "7474:7474"
      - "7687:7687"
    env_file:
      - /opt/veritas/.env.neo4j
    environment:
      - NEO4J_dbms_security_auth__enabled=true
      - NEO4J_AUTH=${NEO4J_USER}:${NEO4J_PASSWORD}
    volumes:
      - neo4j-data:/data

  # MinIO - S3-compatible object storage
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_SERVER_URL=http://localhost:9000
      - MINIO_BROWSER_REDIRECT_URL=http://localhost:9001
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # OpenSearch - Distributed search and analytics engine
  opensearch:
    image: opensearchproject/opensearch:2.11.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # OpenSearch Dashboards (Optional)
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.11.0
    ports:
      - "5601:5601"
    environment:
      - OPENSEARCH_HOSTS=http://opensearch:9200
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
    depends_on:
      opensearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    profiles:
      - dashboards  # Optional profile - start with: docker compose --profile dashboards up

  # Veritas Mini-Web Service (Optional - enable manually)
  veritas-web:
    build: ./veritas-web
    ports:
      - "8080:8080"
    env_file:
      - /opt/veritas/.env.neo4j
    environment:
      - NODE_ENV=production
    depends_on:
      neo4j:
        condition: service_started
    profiles:
      - mini-web  # Optional profile - start with: docker compose --profile mini-web up

volumes:
  postgres_data:
  neo4j-data:
  minio_data:
  opensearch_data:

networks:
  default:
    name: top-tier-hub-network
